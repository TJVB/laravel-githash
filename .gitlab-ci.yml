# set the default docker image
image: registry.gitlab.com/tjvb/phpimages:php80

stages:
  - prepare # prepare the cache
  - check # check the codestyles
  - test
  - report

prepare_cache:
  stage: prepare
  script:
    - composer validate
    - composer install
  # we use this artifact for all the jobs
  artifacts:
    name: "vendor"
    paths:
      - vendor/*

lint:
  stage: check
  script:
    # lint recursive
    - find src/ -type f -name '*.php' -exec php -l {} \; | (! grep -v "No syntax errors detected" )
  dependencies: []

phpcs:
  stage: check
  script:
    - vendor/bin/phpcs
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

phpmd:
  stage: check
  script:
    - vendor/bin/phpmd src/ text phpmd.xml.dist
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

phpstan:
  stage: check
  script:
    # check for phpstan errors
    - php -d memory_limit=500M vendor/bin/phpstan analyse --error-format=gitlab > phpstan.json
    - cat phpstan.json
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache
  artifacts:
    paths:
      - phpstan.json
    when: always


infection:
  image: registry.gitlab.com/tjvb/phpimages:php83
  stage: test
  script:
    - composer install
    - vendor/bin/phpunit --migrate-configuration
    - vendor/bin/infection
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache
  artifacts:
    paths:
      - build/infection.log
    when: always

test_lowest:
  stage: test
  image: registry.gitlab.com/tjvb/phpimages:php80
  script:
    # Install composer
    - rm -f composer.lock
    - composer update --prefer-lowest
    - vendor/bin/phpunit --coverage-text --colors=never --log-junit=phpunitresult/junit.xml
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    reports:
      junit: phpunitresult/junit.xml
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

test:
  parallel:
    matrix:
      - LARAVEL: 9
        TESTBENCH: 7
        PHP:
          - 80
          - 81
          - 82
          - 83
      - LARAVEL: 10
        TESTBENCH: 8
        PHP:
          - 81
          - 82
          - 83
      - LARAVEL: 11
        TESTBENCH: 9
        PHP:
          - 82
          - 83
  image: registry.gitlab.com/tjvb/phpimages:php$PHP
  stage: test
  script:
    - echo "Laravel $LARAVEL"
    - echo "PHP $PHP"
    - echo "TESTBENCH $TESTBENCH"
    - composer require --dev "orchestra/testbench=^$TESTBENCH"
    - vendor/bin/phpunit --coverage-text --colors=never --coverage-cobertura=phpunitresult/cobertura-coverage.xml --log-junit=phpunitresult/junit.xml
    - sed -i 's~ filename="~ filename="src/~' phpunitresult/cobertura-coverage.xml
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    reports:
      junit: phpunitresult/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: phpunitresult/cobertura-coverage.xml
  needs:
    - prepare_cache
  dependencies:
    - prepare_cache

CodeQuality:
  stage: report
  dependencies:
    - phpstan
    - prepare_cache
  script:
    - composer require beechit/json-to-code-climate-subset-converter
    - vendor/bin/converter convert --phpstan --phpstan-json-file=phpstan.json
  artifacts:
    reports:
      codequality: code-climate.json
    when: always
